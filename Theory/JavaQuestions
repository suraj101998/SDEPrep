1. Functional Interfaces: 
Inteface which have one and only one abstract method.
Advantage: we can write a lamda expression which makes our code simple.
can we have public private or default methods in fuctional interface: Yes, but abstact method can only be one.

2. Java is compiled or Interpreted Language: both. Compiler convert source code into byteCode. This byteCode is Platform independent. 
Then JVM interprets bytecode line-by-line as per specific machine. JVM also uses Just in time compiler.
If a particular part of bytecode coming again and again JVM Converts this bytecode to machine level code to improve performance.

3. How to create a singleton class in java: classes where we have one and only one instance of the class.
step1: make all the contructors private in nature.
step2: make public and static method to call the instance of this class.
step3: create private and static variable. 
If someone invokes your method, check if the variable is null or not. 
If it is null create a new instance, assign it to the variable and return the variable else simply return the variable.

4. difference between throw and throws keyword:
throw: used to throw an exception explicitiy within your method on meeting certain condition.
throws: used in the signature of the method itself denoting that method may throw specific kind of checked expressions.

5. what is object class:
default parent of all the java classes. 
Integral part of code and provides with certain method such as equals(), wait(), notify(), notifyAll(), toString() etc. 
At a time a class can extend only one class.

6. Difference between Immutable and mutable objects in java:
mutable: can modify the value once created.
Immutable: cannot modify the value once created. eg: strings. However StringBuilders are mutable in java.

7. what is HQL:
hibernate query language used to interact with database using hibernate queries. 
HQL uses classnames and variablenames.

8. How to create Immutable class in java: (assume all the fields are also Immutable)
step1: make class final so that one can inherit it.
step2: make all the fields private and final so that no one can modify them.
step3: remove all the setter method so that no one can set the values of variables.
step4: create parameterized constuctor which can intialize all fields when we are creating the objects.

9. what is final keyword in java:
used whenever we want to restrict from modifying the value.
can be used alongwith method: cannot override the method.
can be used alongwith class: cannot extend or inherit the class.
can be used alongwith the variable: cannot change the value of the variable.

10. what is static keyword in java:
